/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ListingsRouteImport } from './routes/listings'
import { Route as DescriptionRouteImport } from './routes/description'
import { Route as AiSummaryRouteImport } from './routes/aiSummary'
import { Route as AddListingRouteImport } from './routes/add-listing'
import { Route as IndexRouteImport } from './routes/index'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingsRoute = ListingsRouteImport.update({
  id: '/listings',
  path: '/listings',
  getParentRoute: () => rootRouteImport,
} as any)
const DescriptionRoute = DescriptionRouteImport.update({
  id: '/description',
  path: '/description',
  getParentRoute: () => rootRouteImport,
} as any)
const AiSummaryRoute = AiSummaryRouteImport.update({
  id: '/aiSummary',
  path: '/aiSummary',
  getParentRoute: () => rootRouteImport,
} as any)
const AddListingRoute = AddListingRouteImport.update({
  id: '/add-listing',
  path: '/add-listing',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-listing': typeof AddListingRoute
  '/aiSummary': typeof AiSummaryRoute
  '/description': typeof DescriptionRoute
  '/listings': typeof ListingsRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-listing': typeof AddListingRoute
  '/aiSummary': typeof AiSummaryRoute
  '/description': typeof DescriptionRoute
  '/listings': typeof ListingsRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/add-listing': typeof AddListingRoute
  '/aiSummary': typeof AiSummaryRoute
  '/description': typeof DescriptionRoute
  '/listings': typeof ListingsRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add-listing'
    | '/aiSummary'
    | '/description'
    | '/listings'
    | '/login'
    | '/profile'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add-listing'
    | '/aiSummary'
    | '/description'
    | '/listings'
    | '/login'
    | '/profile'
    | '/register'
  id:
    | '__root__'
    | '/'
    | '/add-listing'
    | '/aiSummary'
    | '/description'
    | '/listings'
    | '/login'
    | '/profile'
    | '/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddListingRoute: typeof AddListingRoute
  AiSummaryRoute: typeof AiSummaryRoute
  DescriptionRoute: typeof DescriptionRoute
  ListingsRoute: typeof ListingsRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings': {
      id: '/listings'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof ListingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/description': {
      id: '/description'
      path: '/description'
      fullPath: '/description'
      preLoaderRoute: typeof DescriptionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aiSummary': {
      id: '/aiSummary'
      path: '/aiSummary'
      fullPath: '/aiSummary'
      preLoaderRoute: typeof AiSummaryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add-listing': {
      id: '/add-listing'
      path: '/add-listing'
      fullPath: '/add-listing'
      preLoaderRoute: typeof AddListingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddListingRoute: AddListingRoute,
  AiSummaryRoute: AiSummaryRoute,
  DescriptionRoute: DescriptionRoute,
  ListingsRoute: ListingsRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
